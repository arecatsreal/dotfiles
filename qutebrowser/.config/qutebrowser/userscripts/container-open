#!/bin/sh
# Copyright (c) 2022 Praveen Kumar S
set -e

# Use the original Configuration for all containers
CONFIG_FILE="$HOME/.config/qutebrowser/config.py"

# File containing list of containers
CONTAINER_LIST="$HOME/sync/qute_containers"

# Base directory to store the containers
CONTAINER_BASE="$HOME/.browser"

# Dmenu program
DMENU="dmenu"

# Helper function to check if the container exists
container_exists ()
{
	test $(grep -xc "$1" "$CONTAINER_LIST") -ge 1
	return $?
}

# Helper function to output messages
send_msg ()
{
	# If QUTE_FIFO is defined, send message-* command to qutebrowser.
	# Else output to stdout / stderr
	if test -n "$QUTE_FIFO"
	then
		if test $1 = "info"
		then
			printf "message-info \"%s\"\n" "$2" >> $QUTE_FIFO
		else
			printf "message-error \"%s\"\n" "$2" >> $QUTE_FIFO
		fi
	else
		if test $1 = "info"
		then
			echo "$2" >> /dev/stdout
		else
			echo "$2" >> /dev/stderr
		fi
	fi
}

# If container name is passed choose that else open dmenu prompt
if [ $# -ge 1 ]
then
	CONTAINER_NAME="$1"
else
	CONTAINER_NAME="$( echo "$(cat $CONTAINER_LIST)" | $DMENU)"
fi

# If URL is selected from hint use that else use the argument if passed
if test $QUTE_MODE = "hints"
then
	URL="$QUTE_URL"
else
	URL="$2"
fi

# Check if container exists
if container_exists "$CONTAINER_NAME"
then
	BASE_DIR="$CONTAINER_BASE/$CONTAINER_NAME"

	# Create base dir if it doesn't exist. This can happen for manually created containers
	if [ ! -d "$BASE_DIR" ]
	then
		mkdir "$BASE_DIR"
	fi
	# Open the given URL in the container. Shows container name in the window title
	qutebrowser -B "$BASE_DIR" -C "$CONFIG_FILE" -s window.title_format " {perc}[$CONTAINER_NAME]{title_sep}{current_title}" "$URL"
else
	# Send an error if given container doesn't exist
	send_msg "error" "Container does not exist. Create using container-add"
fi
